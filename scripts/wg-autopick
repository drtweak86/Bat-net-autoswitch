#!/usr/bin/env bash
# Auto-pick the fastest WireGuard profile using your existing wg-switch
set -euo pipefail

PROFILES=(uk-lon uk-man nl-ams de-ber us-nyc)
TEST_URL="https://speed.cloudflare.com/__down?bytes=20000000"
TEST_TIMEOUT=7
PING_TARGET="1.1.1.1"
STATE_FILE="/run/wg-autopick.state"
HYSTERESIS_PCT=15
UP_STABILISE=3

require() { command -v "$1" >/dev/null 2>&1 || { echo "Missing $1"; exit 1; }; }
speed_test() { curl -m "$TEST_TIMEOUT" -s -o /dev/null -w '%{speed_download}' "$TEST_URL" || echo "0"; }
ping_avg_ms() { p=$(ping -c 3 -w 5 "$PING_TARGET" 2>/dev/null | awk -F'/' '/^rtt|^round-trip/ {print $5}'); echo "${p:-9999}"; }

require curl; require ping; require awk; require python3

declare -A SPEED LAT
current_profile=""; current_speed="0"
[[ -f "$STATE_FILE" ]] && read -r current_profile current_speed < "$STATE_FILE" || true

for prof in "${PROFILES[@]}"; do
  conf="/etc/wireguard/${prof}.conf"
  [[ -f "$conf" ]] || { echo "skip $prof (missing $conf)"; continue; }
  sudo wg-quick down wg0 >/dev/null 2>&1 || true
  if ! sudo wg-quick up "$conf" >/dev/null 2>&1; then echo "fail up $prof"; continue; fi
  sleep "$UP_STABILISE"
  LAT["$prof"]="$(ping_avg_ms)"
  SPEED["$prof"]="$(speed_test)"
  echo "$prof speed=${SPEED[$prof]}B/s lat=${LAT[$prof]}ms"
  sudo wg-quick down wg0 >/dev/null 2>&1 || true
done

best_prof=""; best_speed="0"; best_lat="9999"
for prof in "${!SPEED[@]}"; do
  s="${SPEED[$prof]}"; l="${LAT[$prof]}"
  if python3 - <<PY >/dev/null 2>&1
s=float("$s"); b=float("$best_speed")
import sys; sys.exit(0 if s>b else 1)
PY
  then best_prof="$prof"; best_speed="$s"; best_lat="$l"
  elif [[ "$s" == "$best_speed" ]] && python3 - <<PY >/dev/null 2>&1
l=float("$l"); b=float("$best_lat")
import sys; sys.exit(0 if l<b else 1)
PY
  then best_prof="$prof"; best_speed="$s"; best_lat="$l"; fi
done

[[ -n "$best_prof" ]] || { echo "no usable profiles"; exit 1; }

switch=1
if [[ -n "$current_profile" && "$current_profile" != "$best_prof" ]]; then
  gain=$(python3 - <<PY
n=float("$best_speed"); o=float("$current_speed") if "$current_speed" not in ("","0") else 0.0
print(int(((n-o)/o)*100) if o>0 else 100)
PY
)
  echo "current=$current_profile ($current_speed B/s), gain=${gain}%"
  (( gain < HYSTERESIS_PCT )) && switch=0
fi

if (( switch )); then
  echo "switch -> $best_prof"
  sudo /usr/local/sbin/wg-switch "$best_prof"
  echo "$best_prof $best_speed" | sudo tee "$STATE_FILE" >/dev/null
else
  echo "stay on $current_profile"
fi
